Project 11 required us to use our List implementations from the previous project and perform a few operations with them. We had to read in data from an external file into a node list, sort the data in that node list, convert that node list into an array list, and then perform a search on the data in the array list. The search was recursive and worked by constantly splitting the data into two groups to search for the value. After all of that we were also required to write a quick function which asked for a value n and then output the nth value in the Fibonacci series, this function had to also be recursive.

One of the biggest challenges that I had with this project was going through and fixing my list implementations. In the previous project a mixture of lack of time and just general confusion on some things lead to a not-so-great final product. Thankfully, this project was an excellent way to test the implementations in specific ways, and so I believe that I fixed most of the issues with my implementations. After fixing those, the only other issue that I had was the search function, since it had to be recursive. It was easy enough to write out (although I did get a few seg faults initially) but only after I spent a little bit drawing and understanding what the algorithm should do. The Fibonacci section wasnâ€™t really an issue and I figured that out pretty quickly.

I wrote four functions within my main driver to perform the operations of searching, sorting, converting, and the Fibonacci calculations. The array list implementation was left templated since I found it to be easier to work with. Given more time I would go through and clear up any memory leaks/issues and test on a larger set of data (all of my testing was done on 8 total values).
