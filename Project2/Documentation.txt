Project 2 required us to utilize structs to keep track of an inventory of cars for a car rental company. It also required the usage of a value passed by reference. The program should use a menu which allowed the user to read in data from a file, print the data, give a price quote, output the most expensive car, and print only the available cars.
	The program relies on multiple algorithms to function. The main controlling algorithm is the menu selection loop in main(), which calls the other functions to do things as needed. One of the most used functions is the PrintData() function, which, as the name implies prints the car data in certain formats depending on one of the arguments. One of the arguments for PrintData is an int called mode and if it is set to zero then the entire list is printed with no special formatting, if it is set to one then the entire list is printed as a numbered list which doesn’t use offset notation (i.e. “1. (car info)”), and if it is set to two then only the cars marked as available are printed to the screen. The next function is CalculateCost(), which takes in the amount of days as a reference and also takes in the cost of the chosen car and then prints the cost over that time. GetMostExpensive() runs a loop which goes through every entry in the carList array and checks to see which car is the most expensive. PrintMenu() is just a simple function to allow me to print the menu without having to write the collection of cout lines multiple times. ReadData is the function that reads through the car data file and stores all of the information within the car list array.
	I had a few problems with this project, the primary one was a bit confusing. I was having an issue where passing an array to a function (I wanted it to just pass the address of the first value) would never work properly and most of the time wouldn’t even compile. My solution to this was writing it as “&carList[0]” which forced it to send the address of the first value of the array every time to avoid any sort of malfunction. I also had a few issues with my PrintData function where it just wasn’t reading from the correct memory location, this was solved by deleting the function and writing it again much later in the development process. I also had an issue where I couldn’t send an ifstream variable as a function argument, and I kept getting an error which made it seem like there was an issue with pointers, but adding an asterisk didn’t work to fix it. Instead what I did was send the char array which contained the file name as an argument and used that to open the file within the function.

